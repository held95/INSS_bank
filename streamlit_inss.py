# -*- coding: utf-8 -*-
"""Streamlit INSS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17P-CHdSx5g4JGzvsc9ps-xbz4xZmK5CY
"""

#===================================================C√≥digo para subir Streamlit =========================================#

# streamlit_app.py

import streamlit as st
import pandas as pd

st.set_page_config(page_title="An√°lise INSS - M√©dicos", layout="wide")

st.title("üìä Painel de An√°lise de INSS - M√©dicos")

# Carregar dados principais
df_cadastro = pd.read_csv("saida_unificada.csv")
df_cadastro.columns = df_cadastro.columns.str.strip()
df_cadastro = df_cadastro.fillna("")

# Carregar dados de recebimento (se existir)
try:
    df_receb = pd.read_csv("recebimentos.csv")
    df_receb.columns = df_receb.columns.str.strip()
    df_receb = df_receb.fillna("")
    # Tentativa de merge
    df = pd.merge(df_cadastro, df_receb, how='left', on=["CRM", "NOME"])
    st.success("‚úÖ Dados de recebimento integrados com sucesso.")
except FileNotFoundError:
    df = df_cadastro.copy()
    st.warning("‚ö†Ô∏è Arquivo de recebimentos n√£o encontrado. Mostrando apenas dados cadastrais.")

# Filtros na barra lateral
st.sidebar.header("üîç Filtros")

status_opcao = st.sidebar.multiselect(
    "Status do Cadastro", options=df['STATUS'].unique(), default=df['STATUS'].unique()
)

hospital_cols = [
    'OMED', 'HMB', 'HGP', 'PEDRE', 'REDE HC', 'AME CARAP', 'H MULHER', 'HU SBC',
    'M BOI', 'AME ITAP', 'H TIRADENTES', 'H ITAIM', 'AME PRADOS'
]
hospital_opcao = st.sidebar.multiselect(
    "Hospitais", options=hospital_cols, default=hospital_cols
)

filtro_inss = st.sidebar.radio("Paga INSS?", options=["Todos", "Sim", "N√£o"])

# Aplicar filtros
df_filtrado = df[df['STATUS'].isin(status_opcao)]

if filtro_inss == "Sim":
    df_filtrado = df_filtrado[df_filtrado['INSS'] == "S"]
elif filtro_inss == "N√£o":
    df_filtrado = df_filtrado[df_filtrado['INSS'] == "N"]

# Filtrar por hospitais (pelo menos 1 marcado como 'S')
df_filtrado = df_filtrado[df_filtrado[hospital_opcao].eq("S").any(axis=1)]

# Se√ß√£o principal: Tabela Filtrada
st.subheader("üìÑ Tabela Filtrada")
st.dataframe(df_filtrado, use_container_width=True)

# Contagem por hospital (Apenas ativos)
st.subheader("üè• Contagem por Hospital (Apenas Ativos)")
df_ativos = df[df['STATUS'] == 'ATIVO']
contagem_hospitais = {col: (df_ativos[col] == 'S').sum() for col in hospital_cols}
df_hospitais_contagem = pd.DataFrame.from_dict(contagem_hospitais, orient='index', columns=['Qtd'])
st.bar_chart(df_hospitais_contagem)

# M√©dicos por hospital selecionado
st.subheader("üë©‚Äç‚öïÔ∏è M√©dicos por Hospital")
hospital_escolhido = st.selectbox("Escolha um hospital", options=hospital_cols)
df_hosp = df[df[hospital_escolhido] == 'S'][['NOME', 'CRM', 'STATUS', 'INSS']]
st.dataframe(df_hosp)

# Novos cadastros
st.subheader("üÜï Novos Cadastros")
novos = df[df['CONTRATO'].str.upper().str.contains("ENTRADA") | (df['ASSINOU SAIDA'].str.strip() == "")]
st.dataframe(novos[['NOME', 'CRM', 'STATUS', 'INSS', 'CONTRATO']])

# Valores recebidos (se dispon√≠vel)
if "VALOR RECEBIDO" in df.columns:
    st.subheader("üí∞ M√©dicos com Valores Recebidos")
    df_recebimentos = df_filtrado[df_filtrado['VALOR RECEBIDO'].notna()]
    df_recebimentos = df_recebimentos[['NOME', 'CRM', 'VALOR RECEBIDO']]
    df_recebimentos['VALOR RECEBIDO'] = pd.to_numeric(df_recebimentos['VALOR RECEBIDO'], errors='coerce')
    df_recebimentos = df_recebimentos.dropna(subset=['VALOR RECEBIDO'])
    st.dataframe(df_recebimentos)
    total_recebido = df_recebimentos['VALOR RECEBIDO'].sum()
    st.metric("üíµ Total Recebido (filtrado)", f"R$ {total_recebido:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))

# Bot√£o de download
st.download_button(
    "üì• Baixar CSV Filtrado",
    df_filtrado.to_csv(index=False).encode('utf-8'),
    "dados_filtrados.csv",
    "text/csv"
)
